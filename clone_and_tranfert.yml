---
- name: Retrieve current versions of templates
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter.hostname }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    validate_certs: no
    datacenter: "{{ vcenter.datacenter }}"
    name: "{{ item.name }}"
    schema: "vsphere"
    properties: ["config.changeVersion", "config.uuid"]
  loop: "{{ templates }}"
  register: current_versions

- name: Clone templates if modified
  community.vmware.vmware_guest_cross_vc_clone:
    hostname: "{{ vcenter.hostname }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    validate_certs: no
    name: "{{ item.item.name }}"
    destination_vm_name: "clone_{{ item.item.name }}"
    destination_vcenter: "{{ vcenter.hostname }}"
    destination_vcenter_username: "{{ vcenter.username }}"
    destination_vcenter_password: "{{ vcenter.password }}"
    destination_vcenter_port: '443'
    destination_vcenter_validate_certs: no
    destination_host: "{{ vcenter.destination_host }}"
    destination_datastore: "{{ vcenter.datastore }}"
    destination_vm_folder: "{{ vcenter.vm_folder }}"
    state: present
  loop: "{{ current_versions.results }}"
  when: "state_data[item.item.name] is undefined or state_data[item.item.name] != item.guest.config.changeVersion"
  register: cloning_results

- name: Transfer cloned templates to the content library
  vmware.vmware_rest.vcenter_vm_template_library_items.create:
    hostname: "{{ vcenter.hostname }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    content_library_id: "{{ vcenter.content_library_id }}"
    source_vm: "{{ item.destination_vm_name }}"
    name: "{{ item.destination_vm_name }}_template"
  loop: "{{ cloning_results.results }}"
  when: item.changed
  delegate_to: localhost
